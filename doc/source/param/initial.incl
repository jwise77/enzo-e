----

:Parameter:  :p:`Initial` : :p:`cycle`
:Summary: :s:`Initial cycle number`
:Type:    :t:`list` ( :t:`integer` )
:Default: :d:`0`
:Scope:     :c:`Cello`

:e:`Initial value for the cycle number.`

----

:Parameter:  :p:`Initial` : :p:`time`
:Summary: :s:`Initial time`
:Type:    :t:`float`
:Default: :d:`0.0`
:Scope:     :c:`Cello`

:e:`Initial time in code units.`

value
-----

:Parameter:  :p:`Initial` : :p:`value` : :p:`<field>` :
:Summary: :s:`Initialize field values`
:Type:    :t:`list` ( :t:`float-expr`, [ :t:`logical-expr`, :t:`float-expr`, [ ... ] ] )
:Default: :d:`[]`
:Scope:     Cello

:e:`This initialization approach allows initializing field values directly.  The first element of the list must be a` :t:`float` :e:`expression, and may include arithmetic operators, variables "x", "y", "z", and most functions in the POSIX math library /include/math.h.  The second optional list element is a logical expression, and  serves as a "mask" of the domain.  The third` :t:`float` :e:`expression parameter is required if a mask is supplied, and serves as the "else" case.  Multiple such mask-value pairs may be used.  For example:`

::

   Initial {

      list = ["value"];

      value {
         density = [ sin ( x + y ), x - y < 0.0, 1.0 ];
      }
   }
     
	       
:e:`is read as "Set the density field equal to` :p:`sin ( x + y )` :e:`wherever` :p:`x - y < 0.0` :e:`, otherwise set to` :p:`1.0` :e:`".`

music
-----

The :p:`music` Initial subgroup is used to read block data from HDF5
files generated by MUSIC initial conditions generator.  Parameters are
used to specify the HDF5 files to read from, the names of the HDF5
datasets, what type of data the datasets contain (``"field"`` or
``"particle"``), field or particle names, and particle attributes.
Additionally, a :p:`coords` parameter is used to specify the axis
ordering used.  The :p:`music` group has its own :p:`list` parameter,
one for each field or particle type and attribute.

The following example reads the ``"density"`` field from ``"GridDensity"``
file, and the ``"dark"`` particle ``"position_x"`` attributes from the
``"ParticleDisplacements_x"`` file:

    ::

     Initial {

       list = ["music"];
       music {

          file_list = ["FD","PX"];
          FD {
            type      = "field";
	    name      = "density";
	    coords    = ".zyx";
	    file      = "GridDensity";
	    dataset   = "GridDensity";
	  }
          PX {
	    type      = "particle";
	    name      = "dark";
	    coords    = ".zyx";
	    attribute = "position_x";
	    file      = "ParticleDisplacements_x";
	    dataset   = "ParticleDisplacements_x";
	  }
       }
     }
  
:Parameter:  :p:`Initial` : :p:`music` : :p:`list`
:Summary: :s:`Name of the HDF5 to read from`
:Type:    :t:`string`
:Default: :d:`none`
:Scope:   :z:`Enzo`

:e:`List of file identifiers, one for each field or particle type+attribute.`

----

:Parameter:  :p:`Initial` : :p:`music` : :p:`<file>` : :p:`type`
:Summary: :s:`Type of data to read in`
:Type:    :t:`string`
:Default: :d:`none`
:Scope:   :z:`Enzo`

:e:`Type of data to read in, either "field" or "particle".`

----

:Parameter:  :p:`Initial` : :p:`music` : :p:`<file>` : :p:`file`
:Summary: :s:`Name of the HDF5 file to read from`
:Type:    :t:`string`
:Default: :d:`none`
:Scope:   :z:`Enzo`

:e:`Name of the HDF5 file to read from.`

----

:Parameter:  :p:`Initial` : :p:`music` : :p:`<file>` : :p:`dataset`
:Summary: :s:`Name of the dataset to read from the the HDF5 file`
:Type:    :t:`string`
:Default: :d:`none`
:Scope:   :z:`Enzo`

:e:`Name of the dataset to read from the the HDF5 file.`

----

:Parameter:  :p:`Initial` : :p:`music` : :p:`<file>` : :p:`name`
:Summary: :s:`Name of the field or particle type`
:Type:    :t:`string`
:Default: :d:`none`
:Scope:   :z:`Enzo`

:e:`Name of the field or particle type.`

----

:Parameter:  :p:`Initial` : :p:`music` : :p:`<file>` : :p:`attribute`
:Summary: :s:`Name of the particle attribute to initialize`
:Type:    :t:`string`
:Default: :d:`none`
:Scope:   :z:`Enzo`

:e:`Name of the particle attribute to initialize..`

----

:Parameter:  :p:`Initial` : :p:`music` : :p:`<file>` : :p:`coords`
:Summary: :s:`Ordering of axes in the HDF5 file`
:Type:    :t:`string`
:Default: :d:`"zyx"`
:Scope:   :z:`Enzo`

:e:`String defining the axis ordering of 'x', 'y', and 'z' in the HDF5 file.  For MUSIC initial conditions, which may have 4D datasets, "tzyx" can be used,  where "t" is ignored and can be any character other than 'x', 'y', or 'z'.`


sedov
-----

:Parameter:  :p:`Initial` : :p:`sedov` : :p:`array`
:Summary: :s:`Size of array of Sedov blasts`
:Type:    :t:`list` ( :t:`integer` )
:Default: :d:`[ 1, 1, 1 ]`
:Scope:   :z:`Enzo`

:e:`This parameter defines the size of the array of Sedov blast waves.  The default is a single blast.`

----

:Parameter:  :p:`Initial` : :p:`sedov` : :p:`radius_relative`
:Summary: :s:`Initial radius of the Sedov blast`
:Type:    :t:`float`
:Default: :d:`0.1`
:Scope:   Enzo  
:Todo:    :o:`write`

----

:Parameter:  :p:`Initial` : :p:`sedov` : :p:`pressure_in`
:Summary: :s:`Pressure inside the Sedov blast`
:Type:    :t:`float`
:Default: :d:`1.0`
:Scope:     Enzo  
:Todo:    :o:`write`

----

:Parameter:  :p:`Initial` : :p:`sedov` : :p:`pressure_out`
:Summary: :s:`Pressure outside the Sedov blast`
:Type:    :t:`float`
:Default: :d:`1.0e-5`
:Scope:     Enzo  
:Todo:    :o:`write`

----

:Parameter:  :p:`Initial` : :p:`sedov` : :p:`density`
:Summary: :s:`Density for the Sedov blast array problem`
:Type:    :t:`float`
:Default: :d:`1.0`
:Scope:     Enzo  
:Todo:    :o:`write`

turbulence
----------

:Parameter:  :p:`Initial` : :p:`turbulence` : :p:`density`
:Summary: :s:`Initial density for turbulence initialization and method`
:Type:    :t:`float`
:Default: :d:`1.0`
:Scope:     Enzo  

:e:`Initial density for initializing the turbulence problem.`

----

:Parameter:  :p:`Initial` : :p:`turbulence` : :p:`pressure`

:Summary: :s:`Initial pressure for turbulence initialization and method`
:Type:    :t:`float`
:Default: :d:`0.0`
:Scope:     Enzo  

:e:`Initial pressure for initializing the turbulence problem.  Default is 0.0, meaning it is not used.  Either` `pressure` :e:`or` `temperature` :e:`should be defined, but not both.`

----

:Parameter:  :p:`Initial` : :p:`turbulence` : :p:`temperature`
:Summary: :s:`Initial temperature for turbulence initialization and method`
:Type:    :t:`float`
:Default: :d:`0.0`
:Scope:     Enzo  

:e:`Initial temperature for initializing the turbulence problem.  Default is 0.0, meaning it is not used.  Either` `pressure` :e:`or` `temperature` :e:`should be defined, but not both.`

